dry_run = false
# IR Pump-Probe Spectroscopy Control Interface Hardware Configuration
# Updated with actual hardware specifications from vendor documentation

[system]
# Global system settings
data_directory = "/path/to/data"
log_level = "INFO"
default_units = "microns"  # or "cm1" for wavenumbers

# ============================================================================
# ARDUINO UNO R4 MINIMA - MUX Controller
# ============================================================================
[arduino_mux]
device_type = "Arduino Uno R4 Minima"
connection_type = "USB"
port = "UNKNOWN"  # Windows: COM3, Linux: /dev/ttyUSB0, macOS: /dev/cu.usbmodem*
baud_rate = 115200
timeout = 2.0
description = "MUX controller for sample positioning"

# ============================================================================
# CONTINUUM ND:YAG LASER (SURELITE) - Pump Source
# ============================================================================
[continuum_ndyag]
device_type = "Continuum Surelite Nd:YAG Laser"
connection_type = "TTL"  # Controlled via Signal Generator TTL output
description = "Pump laser controlled via TTL signals from Signal Generator"

# ============================================================================
# DAYLIGHT MIRCAT LASER - Probe Source
# ============================================================================
[daylight_mircat]
device_type = "Daylight MIRcat QCL"
connection_type = "USB"
port = "AUTO"  # Auto-detect USB device
sdk_path = "./docs/sdks/daylight_mircat"  # Relative to project root (multi-user safe)
description = "Mid-IR tunable probe laser"

[daylight_mircat.communication]
# SDK communication parameters
comm_type = "SERIAL"  # MIRcatSDK_COMM_SERIAL
baud_rate = 115200  # MIRcatSDK_SERIAL_BAUD1
auto_detect_port = true
timeout = 5.0

[daylight_mircat.parameters]
# Laser specifications from datasheet
wavenumber_min = 1638.81  # cm-1
wavenumber_max = 2077.27  # cm-1
wavelength_min = 4.81 # micrometers
wavelegnth_max = 6.10 # micrometers
num_qcls = 1  # Number of QCL modules

# laser parameters
display_units = ["Wavelength", "Wavenumber"] # micrometers for wavelength, cm-1 for wavenumber; global, should be applied everywhere and all inputs and valid ranges updated when changed
display_unit_default = "Wavenumber" # default display units value. If changed all other input values should automatically switch to correlate to the selected unit type
select_qcl_options = [1, 2, 3, 4] # QCL selection options; only one QCL is installed in the MIRcat but will be upgraded with 3 more in the future
select_qcl_default = 1 # default value for QCL selection and only one installed currently
laser_mode_options = ["Pulsed", "CW", "CW + Modulation"] # laser operational modes: pulsed, continuous wave, or continuous wave with modulation
laser_mode_default = "Pulsed" # default operation mode  
pulse_rate_min = 10 # minimum value for pulse rate input in Hz
pulse_rate_max = 3000000 # maximum value for pulse rate input in Hz
pulse_rate_default = 2000000 # default value for pulse rate input in Hz
pulse_width_min = 20 # minimum value forpulse width in nanoseconds
pulse_width_max = 1000 # maximum value for pulse width in nanoseconds
duty_cycle_min = 1 # minimum value for duty cycle in %: duty_cyle = pulse_rate * pulse_width * 100; should automatically be calculated when either pulse_rate or pulse_width are changed
duty_cycle_max = 30 # maximum value for duty cycle in %: duty_cyle = pulse_rate * pulse_width * 100; should automatically be calculated when either pulse_rate or pulse_width are changed
duty_cycle_default = 30 # default value for duty cycle in %: duty_cyle = pulse_rate * pulse_width * 100; should automatically be calculated when either pulse_rate or pulse_width are changed 
pulsed_current_min = 100 # minimum value for current in pulsed mode in milliamps
pulsed_current_max = 1000 # maximum value for current in pulsed mode in milliamps
pulsed_current_default = 1000 # default value for current in pulsed mode in milliamps
cw_current_min = 100 # minimum value for continuous wave mode milliamps
cw_current_max = 775 # maximum value for continuous wave mode in milliamps
cw_current_default = 775 # default value for continuous wave mode in milliamps
temperature_min = 17 # minimum value for QCL temperature in degrees C
temperature_max = 23 # maximum value for QCL temperature in degrees C
temperature_default = 19 # default value for QCL temperature in degrees C

# operating mode selection
mode_options = ["Tune", "Sweep", "Step", "Multi_spectral"] # types of operating modes
default_mode_option = "Tune" # default mode of operation

# tune specific parameters
tune_wavenumber_min = 1638.81 # minimum tuning value in wavenumbers
tune_wavenumber_max = 20787.27 # maximum tuning value in wavenumbers
default_tune_wavenumber = 1850 # default tuning value in wavenumbers

# process trigger specific parameters
process_trigger_modes = ["Use Internal Step Mode", "Use External Step Mode", "Use Manual Step Mode"] # types of process trigger modes avaialable
process_trigger_mode_default = "Use Internal Step Mode" # default value for process trigger mode selection
internal_trig_step_time_min = 0 # minimum value for  internal trigger step time in milliseconds
internal_trig_step_time_max = 4000000 # maximum value for internal trigger step time in milliseconds
internal_trig_step_time_default = 1000 # default value for internal trigger step time in milliseconds
internal_trig_step_delay_min = 0 # minimum value for internal trigger step delay in milliseconds
internal_trig_step_delay_max = 4000000 # maximum value for internal trigger step delay in milliseconds
itnernal_trig_step_delay_default = 0 # default value for internalt trigger step delay in milliseconds

# pulse mode specific parameters
pulse_modes = ["Use Internal Pulse Mode", "Use External Trigger Mode", "Use External Pulse Mode", "Use Wavelength Trigger Pulse Mode"] # pulse modes of operation
pulse_mode_default = "Use Internal Pulse Mode" # default pulse mode of operation

# internal pulse mode specific parameters
wl_trig_interval_min = 0.01 # minimum value for wavelength trigger intergval input in wavenumbers
wl_trig_interval_max = 100 # maximum value for wavelength trigger interval input in wavenumbers
wl_trig_interval_default = 1 # default value for wavelength trigger interval input
wl_trig_start_min = 1638.81 # minimum value for wavelength trigger start input in wavenumbers
wl_trig_start_max = 2077.27 # maximum value for wavelength trigger start iput in wavenumbers
wl_trig_start_default = 2077.27 # default value for wavelength trigger start input in wavenumbers
wl_trig_stop_min = 1638.81 # minimum value for wavelength trigger stop input in wavenumbers
wl_trig_stop_max = 2077.27 # maximum value for wavelength triugger stop input in wavenumbers
wl_trig_stop_default = 1638.81 # default value for wavelength trigger stop input in wavenumbers
wl_trig_pulse_width_min = 1 # in microseconds
wl_trig_pulse_width_max = 500 # in microseconds

# scan mode common parameters
start_wavenumber_min = 1638.81 # minimum value for scan start input in wavenumbers (cm-1)
start_wavenumber_max = 2077.27 # maximum value for scan start input in wavenumbers (cm-1)
stat_wavenumber_default = 2077.27 # default value for scan start input in wavenumbers (cm-1)
stop_wavenumber_min = 1638.81 # minimum value for scan stop input in wavenumbers (cm-1)
stop_wavenumber_max = 2077.27 # maximum value for scan stop input in wavenumbers (cm-1)
stop_wavenumber_default = 1638.81 # default value for scan stop input in wavenumbers (cm-1)
scan_count_min = 1 # minimum value for number of scans input 
scan_count_max = 9999 # maximum value for number of scans input 
scan_count_default = 1 #default value for number of scans input
scan_count_infinite = ["Yes", "No"] # checkbox style input; if selected yes then number of scans input should be disabled
scan_count_infinite_default = "No" # checkbox default is unchecked representing finite number of scans determined by number of scans input 

# sweep mode specific input parameters
bi_directional_option = ["Yes", "No"] # checkbox style input; If yes then scans should be bi-directional
bi_directional_option_default = "No" # default setting is unchecked represtenting single direction scan
scan_speed_min = 0.1 # minimum scan speed for sweep mode in wavenumbers per second (cm-1/s)
scan_speed_max = 30000 # maximum scan speed for sweep mode in wavenumbers per second (cm-1/s)
scan_speed_default = 1 # default scan speed for sweep mode in wavenumbers per second (cm-1/s) 

# common input parameters for step and measure mode and multi spectral mode
keep_laser_on = ["Yes", "No"] # checkbox style input; determines if laser should stay on between steps or not
keep_laser_on_default = ["No"] # checkbox default is unchecked representing laser off between steps

# step and measure mode input parameters
step_size_min = 0.5 # minimum step value for size for step and measure mode in wavenumbers (cm-1)
step_size_max = 1000 # maximum step size value for step and measure mode in wavenumbers (cm-1)
step_size_default = 1 # default step size value for step and measure mode in wavenumbers (cm-1)

#multi spectral mode input parameters
multi_spec_wavenumber_min = 1638.81 # minimum value for wavenumber for command addition in cm-1
multi_spec_wavenumber_max = 2077.27 # maximum value for wavenumber for command addition in cm-1
mutli_spec_wavenumber_default = 1850 # default value for wavenumber for command addition in cm-1
dwell_time_min = 1 # minimum value for dwell time for command addition in milliseconds
dwell_time_max = 4000000 # maximum value for dwell time for command addition in milliseconds
dwell_time_default = 5000 # default value for dwell time for command addition in milliseconds
off_time_min = 1 # minimum value for off time between steps for command addition in milliseconds
off_time_max = 4000000 # maximum value for off time between steps for command addition in milliseconds
off_time_default = 100 # default value for off time between steps for command addition in milliseconds

#Safety parameters from manual
interlock_required = true
key_switch_required = true
temperature_monitoring = true
max_temperature = 23  # Celsius
emission_timeout = 3000  # seconds
temperature_stabilization = true
auto_arm = false  # Require manual arming for safety

# configuration specific (no front-end control)
use_advanced_sweep = true # use advanced sweep settings

# ============================================================================
# PICOSCOPE 5244D - Oscilloscope
# ============================================================================
[picoscope_5244d]
device_type = "PicoScope 5244D"
connection_type = "USB3"
sdk_path = "C:/Program Files/Pico Technology/SDK"  # Windows default
description = "2-channel oscilloscope for data acquisition"

[picoscope_5244d.parameters]
# UI validation ranges for Phase 1 (complete from screenshots)
# Input ranges cover the PicoScope standard 1-2-5 steps up to ±20 V.
input_ranges = [
  "±10mV","±20mV","±50mV",
  "±100mV","±200mV","±500mV",
  "±1V","±2V","±5V","±10V","±20V"
]
coupling_options = ["DC","AC"]

# Complete 1-2-5 time/div ladder from ns to s.
time_per_div_options = [
  "1ns/div","2ns/div","5ns/div",
  "10ns/div","20ns/div","50ns/div",
  "100ns/div","200ns/div","500ns/div",
  "1µs/div","2µs/div","5µs/div",
  "10µs/div","20µs/div","50µs/div",
  "100µs/div","200µs/div","500µs/div",
  "1ms/div","2ms/div","5ms/div",
  "10ms/div","20ms/div","50ms/div",
  "100ms/div","200ms/div","500ms/div",
  "1s/div","2s/div","5s/div","10s/div","20s/div","50s/div",
  "100s/div","200s/div","500s/div",
  "1000s/div","2000s/div","5000s/div"
]

resolution_bits_options = [8, 12, 14, 15]
sample_rate_min_hz = 625.0093751406271
sample_rate_max_hz = 500000000.0
samples_min = 1
samples_max = 268435392
awg_frequency_min_hz = 0.030
awg_frequency_max_hz = 20000000.0
awg_amplitude_min_vpp = 0.002
awg_amplitude_max_vpp = 2.0

# Numeric equivalents for SDK mapping (optional)
input_ranges_v = [0.01, 0.02, 0.05, 0.1, 0.2, 0.5, 1.0, 2.0, 5.0, 10.0, 20.0]  # +/- volts
time_per_div_options_s = [
  1e-9, 2e-9, 5e-9,
  1e-8, 2e-8, 5e-8,
  1e-7, 2e-7, 5e-7,
  1e-6, 2e-6, 5e-6,
  1e-5, 2e-5, 5e-5,
  1e-4, 2e-4, 5e-4,
  1e-3, 2e-3, 5e-3,
  1e-2, 2e-2, 5e-2,
  1e-1, 2e-1, 5e-1,
  1.0, 2.0, 5.0, 10.0, 20.0, 50.0,
  100.0, 200.0, 500.0,
  1000.0, 2000.0, 5000.0
]

[picoscope_5244d.parameters.timebase_index_map]
"10ns/div" = 1
"100ns/div" = 5
"1µs/div" = 8
"10µs/div" = 11
"100µs/div" = 14
"1ms/div" = 17
"10ms/div" = 20
"100ms/div" = 23
"1s/div" = 26

# ============================================================================
# QUANTUM COMPOSERS 9524 - Signal Generator
# ============================================================================
[quantum_composers_9524]
device_type = "Quantum Composers 9524"
connection_type = "USB"
port = "COM6"  # Windows: COM4, Linux: /dev/ttyUSB1
baud_rate = 115200
timeout = 2.0
description = "Signal generator for system synchronization"
eol = "\r"                 # Command terminator sent to the device (default CR)
read_terminator = "\n"     # Line terminator expected from device when reading
encoding = "ascii"          # Encoding for serial I/O
query_delay_s = 0.02        # Small wait between query and read, if needed

[quantum_composers_9524.parameters]
## System timing parameters
rate_min_hz = 0.0002
rate_max_hz = 20000000
period_min_s = 0.00000005
period_max_s = 5000.0
burst_count_min = 1
burst_count_max = 9999999
duty_cycle_on_min = 1
duty_cycle_on_max = 9999999
duty_cycle_off_min = 1
duty_cycle_off_max = 9999999

## Channel timing parameters
delay_min_s = -999.99999999975
delay_max_s = 999.99999999975
delay_resolution_s = 0.00000000025
width_min_s = 0.00000001
width_max_s = 999.99999999975
width_resolution_s = 0.00000000025
amplitude_min_v = 2.0
amplitude_max_v = 20.0
trigger_threshold_min_v = 0.2
trigger_threshold_max_v = 15.0
gate_threshold_min_v = 0.2
gate_threshold_max_v = 15.0

[quantum_composers_9524.channels]
# Channel assignments based on wiring diagram
channel_a_function = "ndyag_qswitch_trigger"  # TTL to Nd:YAG laser
channel_b_function = "ndyag_fire_trigger"  # TTL to Nd:YAG laser
channel_c_function = "mircat_trig_in"  # Waveform to MIRcat laser
channel_d_function = "zurich_hf2li_di1"  # Waveform to Lock-in Amplifier

[quantum_composers_9524.commands]
# These templates are the live strings sent to the instrument for Phase 1.
# If your firmware uses different mnemonics, adjust these without touching code.

# Transport/queries
[quantum_composers_9524.commands.query]
identity = "*IDN?"
running = "RUN?"

# Run/stop control
[quantum_composers_9524.commands.control]
start = "RUN"
stop = "STOP"

# System settings
[quantum_composers_9524.commands.system]
pulse_mode = "MODE {pulse_mode}"
period_s = "PER {period_s}"
burst_count = "BURST {burst_count}"
auto_start = "AUTOSTART {auto_start}"
duty_cycle_on_counts = "DUTYON {duty_cycle_on_counts}"
duty_cycle_off_counts = "DUTYOFF {duty_cycle_off_counts}"

# Channel settings — the backend passes {channel} = A|B|C|D
[quantum_composers_9524.commands.channel]
enabled = "CH{channel}:ENAB {enabled}"
delay_s = "CH{channel}:DELAY {delay_s}"
width_s = "CH{channel}:WIDTH {width_s}"
channel_mode = "CH{channel}:MODE {channel_mode}"
sync_source = "CH{channel}:SYNC {sync_source}"
burst_count = "CH{channel}:BURST {burst_count}"
polarity = "CH{channel}:POL {polarity}"
output_mode = "CH{channel}:OUTP {output_mode}"
amplitude_v = "CH{channel}:AMPL {amplitude_v}"
wait_count = "CH{channel}:WAIT {wait_count}"
gate_mode = "CH{channel}:GATE {gate_mode}"
multiplexer = "CH{channel}:MUX A={muxA},B={muxB},C={muxC},D={muxD}"

# External trigger settings
[quantum_composers_9524.commands.external]
trigger_mode = "TRIG:MODE {trigger_mode}"
trigger_edge = "TRIG:EDGE {trigger_edge}"
trigger_threshold_v = "TRIG:THR {trigger_threshold_v}"
gate_mode = "GATE:MODE {gate_mode}"
gate_logic = "GATE:LOGIC {gate_logic}"
gate_threshold_v = "GATE:THR {gate_threshold_v}"

# ============================================================================
# ZURICH HF2LI - Lock-in Amplifier
# ============================================================================
[zurich_hf2li]
device_type = "Zurich Instruments HF2LI"
connection_type = "USB"
# The device identifier used by the LabOne Data Server. For HF2LI the
# canonical form is "dev<serial>", e.g. "dev18500". You can also leave this
# as "AUTO" to let the software try to discover and use the first available
# HF2LI.
device_id = "AUTO"  # Update to your actual device id, e.g. dev12345
host = "127.0.0.1"      # LabOne servers host (used by start.bat)
data_server_port = 8005  # LabOne Data Server port (used by start.bat)
web_server_port = 8006   # LabOne Web Server port (used by start.bat)
description = "Dual-phase lock-in amplifier for signal processing"

# LabOne installation and startup preferences for start.bat
# Root installation directory; the script will look for
#   <labone_root>/DataServer/ziDataServer.exe
#   <labone_root>/WebServer/ziWebServer.exe
# and start them with the configured ports if needed.
labone_root = "C:/Program Files/Zurich Instruments/LabOne"
auto_start_servers = true         # If true, start servers if unreachable
require_web_server = true         # If true, fail start.bat if Web Server is not reachable

[zurich_hf2li.parameters]
frequency_range_min = 0.01  # minimum frequency range detectable by the LIA in Hz
frequency_range_max = 50000000  # maximum frequency range detectable by the LIA in Hz

[zurich_hf2li.parameters.signal_inputs]
range_min_v = 0.0 # Volts
range_max_v = 2.0 # Volts
impedance_options = ["50 Ohm", "1 MOhm"]  # Input impedance options, slider on = 50 Ohm, off = 1 MOhm
coupling_options = ["AC", "DC"]  # Input coupling options
units_options = ["V", "mV"]  # Signal units options, should be V for the MCT Detectors

[zurich_hf2li.parameters.oscillators]
mode_options = ["Manual", "External Reference"]  # oscillator mode options
frequency_min_hz = 0.0 # Setting to 0 disables the oscillator in manual mode
frequency_max_hz = 100000000.0 # absolute maximum frequency of the oscillator in manual mode

[zurich_hf2li.parameters.demodulators]
reference_mode_options = ["Manual", "External Reference"]
oscillator_options = [1, 2]  # oscillator options available for demodulators
harmonic_min = 1 # multiplies the demodulator reference frequency by the integer value
harmonic_max = 1023 # multiplies the demodulator reference frequency by the integer value
phase_min_deg = -180.0 # degrees
phase_max_deg = 180.0  # degrees
input_signal_options = ["Signal 1 In", "Signal 2 In", "Auxillary 1 In", "Auxillary 2 In", "DIO D0", "DIO D1"]  # input signal options for demodulators
lowpass_order_options = [1, 2, 3, 4, 5, 6, 7, 8] # selects the filter roll off between 6db/oct and 48db/oct, 2nd order is 12db/oct
lowpass_bandwidth_bw_3_db_min = 175.7e-6 # 3 db bandwidth in db
lowpass_bandwidth_bw_3_db_max = 138.8e3 # 3 db bandwidth in db
lowpass_bandwidth_bw_nep_min = 214.4e-6 # noise equivalent power bandwidth in db
lowpass_bandwidth_bw_nep_max = 159.6e3 # noise equivalent power bandwidth in db
lowpass_bandwidth_tc_min = 783.2e-9 # time constant in seconds
lowpass_bandwidth_tc_max = 582.9 # time constant in seconds
data_transfer_enabled_options = ["On", "Off"] # setting to "Off" disables the data transfer for that demodulator and sets the rate to zero
data_rate_min_sa_per_s = 219.6e-3 # setting to zero disables the data transfer for that demodulator
data_rate_max_sa_per_s = 1.842e6 # samples per second
fixed_manual_input_signals = ["Signal 1 In", "Signal 1 In", "Signal 1 In", "Signal 2 In", "Signal 2 In", "Signal 2 In"]
extref_demod_indices = [7, 8] # demodulators that can use external reference
manual_demod_indices = [1, 2, 3, 4, 5, 6] # demodulators that use manual reference
extref_input_options = ["Signal 1 In", "Signal 2 In", "Auxillary 1 In", "Auxillary 2 In", "DIO D0", "DIO D1"] # external reference input options for demodulators 7 or 8
total_demodulators = 8

[zurich_hf2li.parameters.demodulators.trigger]
trigger_source = ["Continuous", "DIO 0", "DIO 1", "DIO 0|1"] # trigger source options for demodulators

[zurich_hf2li.parameters.demodulators.trigger_modes] # trigger mode options for demodulators
"DIO 0" = ["Continuous", "Rise", "Fall", "Both", "High", "Low"] # trigger mode options for DIO 0
"DIO 1" = ["Continuous", "Rise", "Fall", "Both", "High", "Low"] # trigger mode options for DIO 1
"DIO 0|1" = ["Continuous", "Rise", "Fall", "Both", "High", "Low"] # trigger mode options for DIO 0|1

